/* You can add global styles to this file, and also import other style files */

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  background: url('assets/background.jpg') no-repeat fixed;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s;
}

.mat-toolbar.mat-primary {
  background-color: rgba(42, 212, 248, .8);
  color: black;
}

.mat-toolbar.mat-primary button, .mat-toolbar.mat-warn button {
  color: black;
}

.mat-toolbar.mat-warn {
  background-color: rgba(255, 82, 82, .6);
  color: black;
}

.mat-dialog-container {
  background-color: rgba(255, 255, 255, .6);
}

.mat-select-panel {
  background-color: rgba(255, 255, 255, .6);
  backdrop-filter: blur(5px);
}

.mat-menu-panel {
  box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);
  border-radius: 5px;
  background-color: rgba(255, 255, 255, .6);
  padding: 5px;
}

.mat-list-item {
  height: 60px !important;
}

.glassmorphism-form {
  box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);
  border-radius: 5px;
  background-color: rgba(255, 255, 255, .3);
  padding: 5px;
  max-width: 800px;
  margin: 0 auto;
}

.glassmorphism-button {
  box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);
  border-radius: 5px !important;
  background-color: rgba(255, 255, 255, .3);
  backdrop-filter: blur(5px);
}

.glassmorphism-red-button {
  box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);
  border-radius: 5px;
  color: black;
  min-width: 36px;
  padding: 0;
  background-color: rgba(255, 82, 82, .8);
  margin-left: 5px;
}

.glassmorphism-list {
  box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .2);
  border-radius: 5px;
  background-color: rgba(255, 255, 255, .3);
  padding: 5px;
  max-width: 800px;
  margin: 0 auto;
}

.yellow-glass {
  background-color: rgba(205, 186, 25, 0.8);
}

.green-glass {
  background-color: rgba(76, 175, 80, .8);
}

.red-glass {
  background-color: rgba(255, 82, 82, .8);
}

.w-25 {
  width: 25%;
}

.w-50 {
  width: 50%;
}

.w-100 {
  width: 100%;
}

.d-flex {
  display: flex !important;
}

.d-block {
  display: block !important;
}

.d-inline-block {
  display: inline-block !important;
}

.ma-1 {
  margin: 5px !important;
}

.mb-0 {
  margin-bottom: 0 !important;
}

.mb-1 {
  margin-bottom: 5px !important;
}

.mb-2 {
  margin-bottom: 10px !important;
}

.ml--1 {
  margin-left: -5px !important;
}

.ml-1 {
  margin-left: 5px !important;
}

.ml-2 {
  margin-left: 10px !important;
}

.mr-1 {
  margin-right: 5px !important;
}

.mr-2 {
  margin-right: 10px !important;
}

.mt-1 {
  margin-top: 5px !important;
}

.mt-3 {
  margin-top: 15px !important;
}

.ml-4 {
  margin-left: 20px !important;
}

.mr-4 {
  margin-right: 20px !important;
}

.pa-1 {
  padding: 5px !important;
}

.pa-0 {
  padding: 0 !important;
}

.pt-0 {
  padding-top: 0 !important;
}

.pt-2 {
  padding-top: 10px !important;
}

.pb-1 {
  padding-bottom: 5px !important;
}

.pl-1 {
  padding-left: 5px !important;
}

.pl-2 {
  padding-left: 10px !important;
}

.pl-4 {
  padding-left: 20px !important;
}

.pr-1 {
  padding-right: 5px !important;
}

.pr-2 {
  padding-right: 10px !important;
}

.pr-0 {
  padding-right: 0px !important;
}

.pr-4 {
  padding-right: 20px !important;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.close-btn {
  min-width: 36px !important;
  padding: 0 !important;
}

.justify-content-between {
  justify-content: space-between !important;
}

.justify-flex-end {
  justify-content: flex-end !important;
}

.justify-center {
  justify-content: center !important;
}

.text-uppercase {
  text-transform: uppercase;
}

.align-center {
  align-items: center;
}

.mt-0 {
  margin-top: 0 !important;
}

.mt-2 {
  margin-top: 10px !important;
}

@media only screen and (min-width: 530px) {
  .two-columns-container > * {
    display: inline-block;
    width: calc(50% - 5px);
  }
  .two-columns-container > div:first-child {
    margin-right: 10px;
  }
}

.text-decoration-none {
  text-decoration: none;
}

.h-100 {
  height: 100%;
}

.c-pointer {
  cursor: pointer;
}

.c-move {
  cursor: move;
}
